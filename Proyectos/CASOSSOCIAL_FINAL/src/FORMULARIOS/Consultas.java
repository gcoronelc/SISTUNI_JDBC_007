/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FORMULARIOS;

import CONEXION.Conectividad;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrador
 */
public class Consultas extends javax.swing.JFrame {

    /**
     * Creates new form Consultas
     */
    public Consultas() {
        initComponents();
        this.setTitle("Consultas");
        this.getContentPane().setBackground(Color.WHITE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("CONSULTAS");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Formularios");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Derechohabientes");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Asegurados");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Aseguradas ");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Asegurados menores de edad");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel2.setText("Ver datos básicos de:");

        jButton7.setText("Titulares");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Empleadores");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Solicitantes");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel3.setText("Consultas Específicas:");

        jButton10.setText("Datos de Contacto de Asegurado");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Cantidad de asegurados");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("Asegurados del tipo agrario");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("Asegurado más longevo");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(351, 351, 351)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton9))
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jButton11)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton13))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jButton4)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton10))))))
                .addContainerGap(67, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jButton1)
                    .addComponent(jButton3)
                    .addComponent(jButton7)
                    .addComponent(jButton8)
                    .addComponent(jButton9))
                .addGap(28, 28, 28)
                .addComponent(jLabel3)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton10))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton11)
                    .addComponent(jButton12)
                    .addComponent(jButton13))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        Conectividad f = new Conectividad(); 

        f.conectar(); 
        ResultSet r = f.consultar("select * from FORMULARIO"); 
     

        DefaultTableModel modelo = new DefaultTableModel(); 
        jTable1.setModel(modelo); 
         modelo.addColumn("N° EXPEDIENTE"); 
         modelo.addColumn("TIPO DE SEGURO"); 
         modelo.addColumn("N° FOLIO"); 
         modelo.addColumn("N° DOC TITULAR"); 
         modelo.addColumn("AUTO. CORREO");
         
         try { 
            while(r.next()){ 
               Object [] fila = new Object[5];//Crea un vector 
               //para almacenar los valores del ResultSet 
              for (int i=0;i<5;i++) 
              fila[i] = r.getObject(i+1); // El primer indice en rs es el 1, no el cero, por eso se suma 1. 
               //añado el modelo a la tabla 
               modelo.addRow(fila); 
               fila=null;//limpia los datos de el vector de la memoria 
            } 
            r.close();//cerrar result-set 
        } catch (SQLException ex) { 
            Logger.getLogger(Consultas.class.getName()).log(Level.SEVERE, null, ex);
        } 
          
         //Cierra el ResultSet 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         Conectividad f = new Conectividad(); 

        f.conectar(); 
        ResultSet r = f.consultar("select derechohabiente.COD_TIT_DER,persona.COD_ASEG,persona.NOM_PER || ' ' ||persona.AP_PAT_PER || ' ' ||persona.AP_MAT_PER, derechohabiente.VIN_TIT_PER_REG from derechohabiente, persona where cod_der=cod_aseg");      

        DefaultTableModel modelo = new DefaultTableModel(); 
        jTable1.setModel(modelo); 
         modelo.addColumn("COD DEL TITULAR"); 
         modelo.addColumn("COD DEL DERECHOHABIENTE"); 
         modelo.addColumn("NOMBRE COMPLETO"); 
         modelo.addColumn("VÍNCULO"); 
         
         try { 
            while(r.next()){ 
               Object [] fila = new Object[4];//Crea un vector 
               //para almacenar los valores del ResultSet 
              for (int i=0;i<4;i++) 
              fila[i] = r.getObject(i+1); // El primer indice en rs es el 1, no el cero, por eso se suma 1. 
               //añado el modelo a la tabla 
               modelo.addRow(fila); 
               fila=null;//limpia los datos de el vector de la memoria 
            } 
            r.close();//cerrar result-set 
        } catch (SQLException ex) { 
            Logger.getLogger(Consultas.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
         Conectividad f = new Conectividad(); 

        f.conectar(); 
        ResultSet r = f.consultar("select p.cod_aseg as \"CÓDIGO DE ASEGURADO\", p.nro_doc_per as \"N° DOC\", p.nom_per || ' ' || p.ap_pat_per as \"NOMBRE COMPLETO\" from persona p where p.gen_per='M' order by p.cod_aseg");      

        DefaultTableModel modelo = new DefaultTableModel(); 
        jTable1.setModel(modelo); 
         modelo.addColumn("COD DEL ASEGURADO"); 
         modelo.addColumn("NRO DE DOC"); 
         modelo.addColumn("NOMBRE COMPLETO"); 
         
         try { 
            while(r.next()){ 
               Object [] fila = new Object[3];//Crea un vector 
               //para almacenar los valores del ResultSet 
              for (int i=0;i<3;i++) 
              fila[i] = r.getObject(i+1); // El primer indice en rs es el 1, no el cero, por eso se suma 1. 
               //añado el modelo a la tabla 
               modelo.addRow(fila); 
               fila=null;//limpia los datos de el vector de la memoria 
            } 
            r.close();//cerrar result-set 
        } catch (SQLException ex) { 
            Logger.getLogger(Consultas.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
         Conectividad f = new Conectividad(); 

        f.conectar(); 
        ResultSet r = f.consultar("select p.cod_aseg as \"CÓDIGO DE ASEGURADO\", p.nro_doc_per as \"N° DOC\", p.nom_per || ' ' || p.ap_pat_per as \"NOMBRE COMPLETO\" from persona p where p.gen_per='F' order by p.cod_aseg");      

        DefaultTableModel modelo = new DefaultTableModel(); 
        jTable1.setModel(modelo); 
         modelo.addColumn("COD DEL ASEGURADO"); 
         modelo.addColumn("NRO DE DOC"); 
         modelo.addColumn("NOMBRE COMPLETO"); 
         
         try { 
            while(r.next()){ 
               Object [] fila = new Object[3];//Crea un vector 
               //para almacenar los valores del ResultSet 
              for (int i=0;i<3;i++) 
              fila[i] = r.getObject(i+1); // El primer indice en rs es el 1, no el cero, por eso se suma 1. 
               //añado el modelo a la tabla 
               modelo.addRow(fila); 
               fila=null;//limpia los datos de el vector de la memoria 
            } 
            r.close();//cerrar result-set 
        } catch (SQLException ex) { 
            Logger.getLogger(Consultas.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        Conectividad f = new Conectividad(); 

        f.conectar(); 
        ResultSet r = f.consultar("select p.cod_aseg as \"CÓDIGO DE ASEGURADO\", p.nro_doc_per as \"N° DOC\", p.nom_per || ' ' || p.ap_pat_per as \"NOMBRE COMPLETO\", TO_CHAR(p.fech_nac_per, 'dd/mm/yyyy') as \"FECH_NAC\" from persona p where months_between(sysdate,p.fech_nac_per)< 12*18 order by p.cod_aseg");      

        DefaultTableModel modelo = new DefaultTableModel(); 
        jTable1.setModel(modelo); 
         modelo.addColumn("COD DEL ASEGURADO"); 
         modelo.addColumn("NRO DE DOC"); 
         modelo.addColumn("NOMBRE COMPLETO"); 
         modelo.addColumn("FECHA DE NACIMIENTO"); 
         
         try { 
            while(r.next()){ 
               Object [] fila = new Object[4];//Crea un vector 
               //para almacenar los valores del ResultSet 
              for (int i=0;i<4;i++) 
              fila[i] = r.getObject(i+1); // El primer indice en rs es el 1, no el cero, por eso se suma 1. 
               //añado el modelo a la tabla 
               modelo.addRow(fila); 
               fila=null;//limpia los datos de el vector de la memoria 
            } 
            r.close();//cerrar result-set 
        } catch (SQLException ex) { 
            Logger.getLogger(Consultas.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        Conectividad f = new Conectividad(); 

        f.conectar(); 
        ResultSet r = f.consultar("select p.cod_aseg as \"CÓDIGO DE ASEGURADO\", p.nro_doc_per as \"N° DOC\", p.nom_per || ' ' || p.ap_pat_per as \"NOMBRE COMPLETO\" from persona p, titular t where t.cod_tit=p.cod_aseg order by p.cod_aseg");      

        DefaultTableModel modelo = new DefaultTableModel(); 
        jTable1.setModel(modelo); 
         modelo.addColumn("COD DEL ASEGURADO"); 
         modelo.addColumn("NRO DE DOC"); 
         modelo.addColumn("NOMBRE COMPLETO");  
         
         try { 
            while(r.next()){ 
               Object [] fila = new Object[3];//Crea un vector 
               //para almacenar los valores del ResultSet 
              for (int i=0;i<3;i++) 
              fila[i] = r.getObject(i+1); // El primer indice en rs es el 1, no el cero, por eso se suma 1. 
               //añado el modelo a la tabla 
               modelo.addRow(fila); 
               fila=null;//limpia los datos de el vector de la memoria 
            } 
            r.close();//cerrar result-set 
        } catch (SQLException ex) { 
            Logger.getLogger(Consultas.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
         Conectividad f = new Conectividad(); 

        f.conectar(); 
        ResultSet r = f.consultar("select cod_emp, nro_doc_emp,nom_emp  from EMPLEADOR"); 
        String sql;

        DefaultTableModel modelo = new DefaultTableModel(); 
        jTable1.setModel(modelo); 
         modelo.addColumn("CÓDIGO"); 
         modelo.addColumn("N° DOC"); 
         modelo.addColumn("NOMBRE"); 
         
         try { 
            while(r.next()){ 
               Object [] fila = new Object[3];//Crea un vector 
               //para almacenar los valores del ResultSet 
              for (int i=0;i<3;i++) 
              fila[i] = r.getObject(i+1); // El primer indice en rs es el 1, no el cero, por eso se suma 1. 
               //añado el modelo a la tabla 
               modelo.addRow(fila); 
               fila=null;//limpia los datos de el vector de la memoria 
            } 
            r.close();//cerrar result-set 
        } catch (SQLException ex) { 
            Logger.getLogger(Consultas.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
         Conectividad f = new Conectividad(); 

        f.conectar(); 
        ResultSet r = f.consultar("select s.NRO_DOC_BENE_PREST, s.NOM_BENE_PREST, s.VIN_BENE_PREST, s.COD_TIT_BENE from solicitante s order by s.NRO_DOC_BENE_PREST"); 
        String sql;

        DefaultTableModel modelo = new DefaultTableModel(); 
        jTable1.setModel(modelo); 
         modelo.addColumn("N° DOC"); 
         modelo.addColumn("NOMBRE"); 
         modelo.addColumn("VÍNCULO"); 
         modelo.addColumn("CÓDIGO DE TITULAR"); 
         
         try { 
            while(r.next()){ 
               Object [] fila = new Object[4];//Crea un vector 
               //para almacenar los valores del ResultSet 
              for (int i=0;i<4;i++) 
              fila[i] = r.getObject(i+1); // El primer indice en rs es el 1, no el cero, por eso se suma 1. 
               //añado el modelo a la tabla 
               modelo.addRow(fila); 
               fila=null;//limpia los datos de el vector de la memoria 
            } 
            r.close();//cerrar result-set 
        } catch (SQLException ex) { 
            Logger.getLogger(Consultas.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        Conectividad f = new Conectividad(); 

        f.conectar(); 
        ResultSet r = f.consultar("select min(fech_nac_per)as \"Fecha de nacimiento\" from persona");      

        DefaultTableModel modelo = new DefaultTableModel(); 
        jTable1.setModel(modelo); 
         modelo.addColumn("Fecha de nacimiento de la persona más longeva"); 
         
         try { 
            while(r.next()){ 
               Object [] fila = new Object[1];//Crea un vector 
               //para almacenar los valores del ResultSet 
              for (int i=0;i<1;i++) 
              fila[i] = r.getObject(i+1); // El primer indice en rs es el 1, no el cero, por eso se suma 1. 
               //añado el modelo a la tabla 
               modelo.addRow(fila); 
               fila=null;//limpia los datos de el vector de la memoria 
            } 
            r.close();//cerrar result-set 
        } catch (SQLException ex) { 
            Logger.getLogger(Consultas.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        Conectividad f = new Conectividad(); 

        f.conectar(); 
        ResultSet r = f.consultar("select persona.COD_ASEG,persona.NOM_PER || ' ' || persona.AP_PAT_PER ||' '|| persona.AP_MAT_PER as \"Nombre Completo\" from titular t join formulario on t.COD_TIT=formulario.COD_TIT_FORM join persona on t.COD_TIT=persona.COD_ASEG where formulario.TIPO_SEG='Agrario'");      

        DefaultTableModel modelo = new DefaultTableModel(); 
        jTable1.setModel(modelo); 
         modelo.addColumn("COD DEL ASEGURADO"); 
         modelo.addColumn("NOMBRE COMPLETO"); 
         
         try { 
            while(r.next()){ 
               Object [] fila = new Object[2];//Crea un vector 
               //para almacenar los valores del ResultSet 
              for (int i=0;i<2;i++) 
              fila[i] = r.getObject(i+1); // El primer indice en rs es el 1, no el cero, por eso se suma 1. 
               //añado el modelo a la tabla 
               modelo.addRow(fila); 
               fila=null;//limpia los datos de el vector de la memoria 
            } 
            r.close();//cerrar result-set 
        } catch (SQLException ex) { 
            Logger.getLogger(Consultas.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        Conectividad f = new Conectividad(); 

        f.conectar(); 
        ResultSet r = f.consultar("select count (*) from persona");      

        DefaultTableModel modelo = new DefaultTableModel(); 
        jTable1.setModel(modelo); 
         modelo.addColumn("Cantidad de Asegurados"); 
         
         try { 
            while(r.next()){ 
               Object [] fila = new Object[1];//Crea un vector 
               //para almacenar los valores del ResultSet 
              for (int i=0;i<1;i++) 
              fila[i] = r.getObject(i+1); // El primer indice en rs es el 1, no el cero, por eso se suma 1. 
               //añado el modelo a la tabla 
               modelo.addRow(fila); 
               fila=null;//limpia los datos de el vector de la memoria 
            } 
            r.close();//cerrar result-set 
        } catch (SQLException ex) { 
            Logger.getLogger(Consultas.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
         Conectividad f = new Conectividad(); 

        f.conectar(); 
        ResultSet r = f.consultar("select persona.COD_ASEG,persona.NOM_PER || ' ' || persona.AP_PAT_PER ||' '|| persona.AP_MAT_PER as \"Nombre Completo\", persona.TELF_PER, persona.CORREO_PER from persona");      

        DefaultTableModel modelo = new DefaultTableModel(); 
        jTable1.setModel(modelo); 
         modelo.addColumn("COD DEL ASEGURADO"); 
         modelo.addColumn("NOMBRE COMPLETO"); 
         modelo.addColumn("TELÉFONO"); 
         modelo.addColumn("CORREO"); 
         
         try { 
            while(r.next()){ 
               Object [] fila = new Object[4];//Crea un vector 
               //para almacenar los valores del ResultSet 
              for (int i=0;i<4;i++) 
              fila[i] = r.getObject(i+1); // El primer indice en rs es el 1, no el cero, por eso se suma 1. 
               //añado el modelo a la tabla 
               modelo.addRow(fila); 
               fila=null;//limpia los datos de el vector de la memoria 
            } 
            r.close();//cerrar result-set 
        } catch (SQLException ex) { 
            Logger.getLogger(Consultas.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_jButton10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Consultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Consultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Consultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Consultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Consultas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
